import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {useState,useEffect} from 'react'
import cookie from 'js-cookie'
import Link from 'next/link'
import { addNewRecord } from '../utils/services/postServices'


export async function getServerSideProps({ req }) {
  // Fetch data from external API
 
try{
  const refreshToken = req.cookies.refreshToken
  const token = req.cookies.token
  const record = await getARecord({refreshToken,token})
 if (records.error){
   console.log("the error")
   return { props: { error:record } }
 }

  // Pass data to the page via props
  return { props: { records } }
}catch(err){
  console.log(err.data)
  return  { props: { error:"error" } }
}
  

}


export default function Home() {
const [user,setUser]=useState({})
const [selectedCourses,setSelectedCourses]=useState([])
console.log(selectedCourses)
const addRecord=async (e)=>{
  e.preventDefault()
  const record= {...user,courses:selectedCourses}
  const data = await addNewRecord(record)
  console.log(data)
}

useEffect(() => {
  const token=cookie.get("token")
  console.log(token)
  const refreshToken=cookie.get("refreshToken")
  console.log(refreshToken)
}, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
      <form>

      <input 
      value={user.lastName}
      onChange={(e)=>setUser({...user,lastName:e.target.value.trim()})}
      type="text"
      placeholder="Last Name" />
      <input 
            value={user.firstName}
      onChange={(e)=>setUser({...user,firstName:e.target.value.trim()})}
      type="text"
      placeholder="First Name" />
      <input 
      type="text"
      value={user.otherNames}
      onChange={(e)=>setUser({...user,otherNames:e.target.value.trim()})}
      placeholder="Other Name(s)" />
      <input
      type="phone"
      value={user.phone}
      onChange={(e)=>setUser({...user,phone:e.target.value.trim()})}
       placeholder="Phone" />
       <select onChange={(e)=>setUser({...user,department:e.target.value.trim()})}>
       <option 
        
       value={user.department}>
          Slect Department
         </option>
         {
           ["Maths/Stats","Comp. Sci.", "Physics","BCH","MCB"].map(dept=>{
             return (
              <option value={dept}>
         {dept}
         </option>
             )
           })
         }
       
       </select>
       <select onChange={(e)=>setUser({...user,level:e.target.value.trim()})}>
       <option 
        
       value={user.department}>
          Slect Level
         </option>
         {
           ["100","200","300","400"].map(dept=>{
             return (
              <option value={dept}>
         {dept}
         </option>
             )
           })
         }
       
       </select>
   
       <div style={{margin:"10px 0"}}>

         {
           ["MTH210","MTH220","MTH270","STA260","CSC280"].map(course=>{
             return (
               <>
               <label>{course}</label>
               <input  
               onChange={(e)=>{if(e.target.checked){
                 setSelectedCourses([...selectedCourses,{course}])
               }else{
                setSelectedCourses(selectedCourses.filter(obj=>obj.course!==course))
               }}}
               type="checkbox"
                style={{marginRight:10}}

                />
               </>
             )
           })
         }
       </div>
      
      <button 
      onClick={addRecord}
      >
        Save
      </button>

      <div>
  <Link href="/manage-records">
    <a>
      Manage records
    </a>
  </Link>
</div>

      </form>
   
      </main>

      
    </div>
  )
}
